options:
  docker: true
  size: 2x
pipelines:
  pull-requests:
    'master':
      - step:
          name: Atlassian Security Secrets Scan
          script:
            - pipe: atlassian/git-secrets-scan:0.5.1
      - step:
          image: 'node:14.16'
          name: 'Linter'
          script: 
            - npm config set dev true 
            - npm config set npat true
            - npm i --no-progress
            - npx eslint . --ext .js,.jsx,.ts,.tsx
      - step:
          name: 'Test'
          image: 'node:14.16'
          script:
            - npm i --no-progress
            - npm i -g gulp
            - sh ./post-install.sh
            - npm run test:unit
  branches:
    alpha:
    - step: 
        name: 'Fetch NPM dependencies'
        image: node:14.16
        script:
          - npm ci --only=production
          - npm audit fix --production
          - export SEMVAR=$(git tag -l --contains HEAD)
          - echo $SEMVAR > semvar.txt
        caches:
          - nodemodules
        artifacts:
          - node_modules/**
          - semvar.txt
    - step:
        name: "Build & Push Docker image"
        image: python:3.9-alpine
        script:
          - pip3 install -U awscli
          - export REPO=$DOCKER_REPO_URL/kidsloop-pdf-service
          - export SEMVAR=$(cat semvar.txt)
          - aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin $DOCKER_REPO_URL
          - docker build -f Dockerfile -t pdf-service --target build .
          - docker tag pdf-service:latest $REPO:alpha
          - docker push $REPO:alpha
          - |
            if [ "${#SEMVAR}" -ge 2 ]; then
              docker tag pdf-service:latest $REPO:$SEMVAR
              docker push $REPO:$SEMVAR 
            fi
        services:
          - docker
        caches:
          - docker
        size: 2x
    production:
    - step: 
        name: 'Fetch NPM dependencies'
        image: node:14.16
        script:
          - npm ci --only=production
          - npm audit fix
          - export SEMVAR=$(git tag -l --contains HEAD)
          - echo $SEMVAR > semvar.txt
        caches:
          - nodemodules
        artifacts:
          - node_modules/**
          - semvar.txt
    - step:
        name: "Build & Push Docker image"
        image: python:3.9-alpine
        script:
          - pip3 install -U awscli
          - export BRANCH_TAG=$(echo "$BITBUCKET_BRANCH" | sed -E 's/([^0-9a-zA-Z]+)/-/g' | awk '{print tolower($0)}')
          - export REPO=$DOCKER_REPO_URL/kidsloop-pdf-service
          - export COMMIT_TAG=$(echo $BITBUCKET_COMMIT | cut -c1-7)
          - export SEMVAR=$(cat semvar.txt)
          - aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin $DOCKER_REPO_URL
          - docker build -t pdf-service -f Dockerfile --target build .
          - docker tag pdf-service:latest $REPO:$BRANCH_TAG-$COMMIT_TAG
          - docker push $REPO:$BRANCH_TAG-$COMMIT_TAG
          - |
            if [ "${#SEMVAR}" -ge 2 ]; then
              docker tag pdf-service:latest $REPO:$SEMVAR
              docker push $REPO:$SEMVAR 
            fi
        services:
          - docker
        size: 2x
    dev:
    - step: 
        name: 'Fetch NPM dependencies'
        image: node:14.16
        script:
          - npm ci --only=production
          - npm audit fix --production
          - export SEMVAR=$(git tag -l --contains HEAD)
          - echo $SEMVAR > semvar.txt
        caches:
          - nodemodules
        artifacts:
          - node_modules/**
          - semvar.txt
    - step:
        name: "Build & Push Docker image"
        image: python:3.9-alpine
        script:
          - |
            if [[ "$SEMVAR" == *"dev"* ]]; then
              pip3 install -U awscli
              export REPO=$DOCKER_REPO_URL/kidsloop-pdf-service
              export SEMVAR=$(cat semvar.txt)
              aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin $DOCKER_REPO_URL
              docker build -f Dockerfile -t pdf-service --target build .
              docker tag pdf-service:latest $REPO:$SEMVAR
              docker push $REPO:$SEMVAR 
            fi
        services:
          - docker
        caches:
          - docker
        size: 2x

definitions:
  caches:
    nodemodules: ./node_modules
  services:
    docker:
      memory: 4096