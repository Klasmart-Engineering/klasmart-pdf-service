name: Docker Image CI

on:
  push:
    branches: [ master, actions, "audit-fixes" ]
  pull_request:
    branches: [ master, actions, "audit-fixes" ]

jobs:

  Test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      name: Configure NodeJS
    - uses: actions/setup-node@v2
      env:
        NODE_AUTH_TOKEN: ${{ secrets.KL_PACKAGES_PAT }}
      with:
        node-version: '16.6'
        registry-url: 'https://npm.pkg.github.com'
        scope: '@kidsloop-global'
    - name: Install Dependencies
      run: npm ci

    - name: Run Unit Tests
      run: npm run test:unit
  
  Build:
    runs-on: ubuntu-latest
    
    env:
      # Use docker.io for Docker Hub if empty
      REGISTRY: ghcr.io
      # github.repository as <account>/<repo>
      IMAGE_NAME: ${{ github.repository }}
    
    steps:
    - uses: actions/checkout@v2
      name: Configure NodeJS
    - uses: actions/setup-node@v2
      env:
        NODE_AUTH_TOKEN: ${{ secrets.KL_PACKAGES_PAT }}
      with:
        node-version: '16.6'
        registry-url: 'https://npm.pkg.github.com'
        scope: '@kidsloop-global'
    - name: Install Dependencies
      run: npm ci 

    - name: Build
      run: npm run build

    - name: Remove dependencies and reinstall only production dependencies
      run: |
        rm -rf node_modules
        npm ci --production=only

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ghcr.io/${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha

    - name: Log in to registry-url
      uses: docker/login-action@v1
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}